openapi: 3.0.0
info:
  title: LeetCode Clone API
  version: 1.0.0
  description: REST API для платформы LeetCode-клона
servers:
  - url: http://localhost:3000/api
paths:
  /auth/register:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: Пользователь создан
        '400':
          description: Ошибка валидации
  /auth/login:
    post:
      summary: Логин пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Неверные данные
  /users:
    get:
      summary: Получить список пользователей
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Создать пользователя (admin)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Пользователь создан
  /users/{id}:
    get:
      summary: Получить пользователя по id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Не найдено
    patch:
      summary: Обновить пользователя
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: OK
    delete:
      summary: Удалить пользователя
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Удалено
  /tasks:
    get:
      summary: Получить список задач
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Создать задачу
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '201':
          description: Задача создана
  /tasks/{id}:
    get:
      summary: Получить задачу по id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Не найдено
    patch:
      summary: Обновить задачу
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: OK
    delete:
      summary: Удалить задачу
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Удалено
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        role:
          type: string
        rating:
          type: integer
    UserRegister:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        token:
          type: string
    UserCreate:
      allOf:
        - $ref: '#/components/schemas/UserRegister'
        - type: object
          properties:
            role:
              type: string
    UserUpdate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        role:
          type: string
        rating:
          type: integer
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        difficulty:
          type: string
        tags:
          type: array
          items:
            type: string
        examples:
          type: array
          items:
            $ref: '#/components/schemas/Example'
        materials:
          type: array
          items:
            type: string
        createdBy:
          type: integer
    TaskCreate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        difficulty:
          type: string
        tags:
          type: array
          items:
            type: string
        examples:
          type: array
          items:
            $ref: '#/components/schemas/Example'
        materials:
          type: array
          items:
            type: string
    TaskUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        difficulty:
          type: string
        tags:
          type: array
          items:
            type: string
        examples:
          type: array
          items:
            $ref: '#/components/schemas/Example'
        materials:
          type: array
          items:
            type: string
    Example:
      type: object
      properties:
        input:
          type: string
        output:
          type: string 